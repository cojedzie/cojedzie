# https://taskfile.dev
version: '3'

vars:
  SQLITE_DSN: sqlite:///%kernel.project_dir%/var/db/app.db
  POSTGRES_DSN: postgres://cojedzie:cojedzie@postgres/cojedzie?serverVersion=14
  MYSQL_DSN: mysql://cojedzie:cojedzie@mysql/cojedzie?serverVersion=mariadb-10.7.1
  USER:
    sh: id -u

tasks:
  exec:
    desc: Execute command on one of available containers
    cmds:
      - docker-compose exec {{.FLAGS}} -u {{.USER}} {{.SERVICE}} {{.CLI_ARGS}}

  dependencies:
    deps:
      - task: dependencies:api
      - task: dependencies:frontend

  dependencies:api:
    desc: Intalls api dependencies (composer)
    cmds:
      - docker-compose run --rm -e HOME=/tmp {{.FLAGS}} -u {{.USER}} api composer install

  dependencies:frontend:
    desc: Intalls api dependencies (composer)
    cmds:
      - docker-compose run --rm -e HOME=/tmp {{.FLAGS}} -u {{.USER}} frontend yarn install
      - docker-compose run --rm -e HOME=/tmp {{.FLAGS}} -u {{.USER}} frontend sh -c "find resources/fontawesome -type f -name '*.tgz' | sed s/^/file:/ | xargs yarn add-no-save"

  lint:
    deps:
      - task: lint:eslint

  lint:eslint:
    desc: Lint frontend using ES Lint
    cmds:
      - docker-compose run --rm -e HOME=/tmp {{.FLAGS}} -u {{.USER}} frontend node_modules/.bin/eslint {{.CLI_ARGS}}

  reformat:
    deps:
      - task: reformat:api

  reformat:api:
    desc: Reformat API with ECS
    cmds:
      - docker-compose run --rm -e APP_RUNAS="{{.USER}}" api vendor/bin/ecs --fix

  test:
    deps:
      - task: test:api

  test:api:
    desc: Test API component with phpunit
    cmds:
      - docker-compose run --rm -e HOME=/tmp {{.FLAGS}} -u {{.USER}} api bin/phpunit {{.CLI_ARGS}}

  benchmark:
    deps:
      - task: benchmark:api

  benchmark:api:
    desc: Benchmark API component with phpbench
    vars:
      REPORT: default
    cmds:
      - >
        docker-compose run 
        --rm -e APP_MODE=benchmark {{.DOCKER_FLAGS}} 
        api vendor/bin/phpbench 
        --php-config="opcache.enable: 1, opcache.enable_cli: 1{{if .PHP_CONFIG}}, {{end}}{{.PHP_CONFIG}}"
        run tests --report={{.REPORT}} {{.CLI_ARGS}}

  benchmark:profile:api:
    desc: Benchmark API component with phpbench
    vars:
      REPORT: default
    cmds:
      - >
        docker-compose run 
        --rm -e {{.DOCKER_FLAGS}} 
        api vendor/bin/phpbench 
        xdebug:profile tests --report={{.REPORT}} {{.CLI_ARGS}}

  frontend:yarn:
    desc: Execute yarn command
    cmds:
      - docker-compose exec {{.FLAGS}} -u {{.USER}} frontend yarn {{.CLI_ARGS}}

  api:console:
    desc: Execute command in the symfony console
    cmds:
      - docker-compose exec {{.FLAGS}} -u {{.USER}} api bin/console {{.CLI_ARGS}}

  api:migrations:generate:
    desc: Generate migrations for all database engines
    cmds:
      - cmd: docker-compose exec -e DATABASE_URL="{{.SQLITE_DSN}}" -u {{.USER}} api bin/console doctrine:migrations:diff
        ignore_error: true
      - cmd: docker-compose exec -e DATABASE_URL="{{.MYSQL_DSN}}" -u {{.USER}} api bin/console doctrine:migrations:diff
        ignore_error: true
      - cmd: docker-compose exec -e DATABASE_URL="{{.POSTGRES_DSN}}" -u {{.USER}} api bin/console doctrine:migrations:diff
        ignore_error: true
